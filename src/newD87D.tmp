[gd_scene load_steps=10 format=3 uid="uid://b6apa4vss8dou"]

[ext_resource type="Script" path="res://addons/humanizer/scripts/auto_updating_humanizer.gd" id="1_7ijj3"]
[ext_resource type="Script" path="res://addons/humanizer/scripts/resources/human_config.gd" id="2_xmw2h"]
[ext_resource type="ArrayMesh" uid="uid://fudl6b84hhf5" path="res://assets/simple Base.obj" id="4_8gh7d"]
[ext_resource type="PackedScene" uid="uid://csan8bknfmodc" path="res://addons/humanizer/data/animations/animation_tree.tscn" id="4_xf4yp"]

[sub_resource type="GDScript" id="GDScript_yutiq"]
script/source = "extends Control

@export var humanizer :AutoUpdatingHumanizer
@export var nameBox:TextEdit 
@export var baseMesh:MeshInstance3D
var shapekey_opposites = [[\"decr\",\"incr\"], [\"down\",\"up\"],   [\"in\",\"out\"],   [\"backward\",\"forward\"],  [\"concave\",\"convex\"],  [\"compress\",\"uncompress\"], [\"square\",\"round\"], [\"pointed\",\"triangle\"]]
var registry = HumanizerRegistry
@export var camera :Camera3D
const clothesSlots = [\"Head\",\"Eyes\",\"mouth\",\"Hands\",\"Arms\",\"Torso\",\"Legs\",\"Feet\"]
var camera_zoom = 0
var zoom_in_offset = 0
var zoom_out_offset = 1.5
var zoom_in_size = .25
var zoom_out_size = 3
var zoom_mid_ratio = 0
var zoom_mid_offset = 0
var eyebrow_menu_options = []
var hair_menu_options = []
var skin_shader : ShaderMaterial = load(\"res://skin_color_shader.tres\")
var age = 50
var gender = \"male\"
var skin_color_ratio = 0.0
var clothes_dict={}

# Called when the node enters the scene tree for the first time.
func _ready():
	camera.position.y = 0
	camera.position.x = 0
	camera.position.z = 1
	camera.v_offset = zoom_out_offset
	camera.size = zoom_out_size
	build_menu()
	eyebrow_selected(11)
	get_camera_min_max()
	humanizer.get_node(\"AnimationTree\").active=false
	$FileDialog.current_dir = \"/\"
	$FileDialog.use_native_dialog=true
	$FileDialog.access=FileDialog.ACCESS_FILESYSTEM
	OBJExporter.export_started.connect(_on_export_started)
	OBJExporter.export_completed.connect(_on_export_completed)
	OBJExporter.export_progress_updated.connect(_on_export_progress)
	HelperFunctions.import_bvh(\"res://assets/poses/ Snek_01.bvh\")

func _on_export_started():
	print(\"Export started\")
func _on_export_completed(obj_file):
	print(\"Export completed: \", obj_file)
func _on_export_progress(_surf_idx, _progress_value):
	print(\"progress %s percent on model %s\"%[_progress_value,_surf_idx])
	pass
func get_camera_min_max():
	var middle_eyes = humanizer._helper_vertex[5063]
	zoom_in_offset = middle_eyes.y 
	var top_head = humanizer._helper_vertex[5063]
	zoom_mid_ratio = top_head.y / (zoom_out_size - zoom_in_size)
	zoom_mid_offset = top_head.y / 2

#needed or second save will have wrong skeleton and corrupted mesh
#delete folder before saving!
func delete_directory(path):
	for dir_name in OSPath.get_dirs(path):
		delete_directory(dir_name)
	for file_name in OSPath.get_files(path):
		DirAccess.remove_absolute(file_name)
	DirAccess.remove_absolute(path)
	
func build_menu():
	humanizer.set_body_part(registry.body_parts.LeftEye[\"LeftEyeBall-LowPoly\"])
	humanizer.set_body_part(registry.body_parts.RightEye[\"RightEyeball-LowPoly\"])
	humanizer.set_body_part(registry.body_parts.LeftEyelash[\"LeftEyelash\"])
	humanizer.set_body_part(registry.body_parts.RightEyelash[\"RightEyelash\"])
	
	var shapekey_categories = HumanizerUtils.get_shapekey_categories()
	for category_name in shapekey_categories:
		var category_keys = {}
		for shapekey_name in shapekey_categories[category_name]:
			if not shapekey_name.begins_with(\"asym-\"):
				var base_key_name = shapekey_name
				if shapekey_name.begins_with(\"l-\") or shapekey_name.begins_with(\"r-\"):
					base_key_name = base_key_name.substr(2).strip_edges()
				if base_key_name not in category_keys:
					category_keys[base_key_name] = []
				category_keys[base_key_name].append(shapekey_name)
			
		shapekey_categories[category_name] = category_keys
	
	#shapekey_categories.Macro.erase(\"gender\")
	var main_tab = ScrollContainer.new()
	main_tab.name = \"Main\"
	$Split_Screen/Menu_Options.add_child(main_tab)		
	var main_vbox = VBoxContainer.new()
	main_tab.add_child(main_vbox)
	var reset_all_button = Button.new()
	reset_all_button.text=\"Reset All\"
	var category_keys2 = shapekey_categories[\"Macro\"]	
	for key_name in category_keys2:
		var slider = load(\"res://shapekey_slider.tscn\").instantiate()
		slider.label_name = key_name
		slider.shapekeys = category_keys2[key_name]
		slider.set_value(50)
		slider.change_shapekeys.connect(set_shapekeys)
		main_vbox.add_child(slider)
	
	var label = Label.new()
	label.text = \" Racial Features \"
	label.set_custom_minimum_size(Vector2(300,0))
	main_vbox.add_child(label)
	
	category_keys2 = shapekey_categories[\"Race\"]	
	for key_name in category_keys2:
		var slider = load(\"res://shapekey_slider.tscn\").instantiate()
		slider.label_name = key_name
		slider.shapekeys = category_keys2[key_name]
		slider.set_value(33)
		slider.change_shapekeys.connect(set_shapekeys)
		main_vbox.add_child(slider)
	
	shapekey_categories.erase(\"Macro\")
	shapekey_categories.erase(\"Race\")
	shapekey_categories.erase(\"Misc\") #verify this is still empty
	
	var hair_panel = ScrollContainer.new()
	hair_panel.name = \"Hair & Eyes\"
	$Split_Screen/Menu_Options.add_child(hair_panel)
	var hair_vbox = VBoxContainer.new()
	hair_panel.add_child(hair_vbox)
	label = Label.new()
	label.text = \"Eye Color\"
	hair_vbox.add_child(label)
	var eye_color_picker = ColorPickerButton.new()
	eye_color_picker.color = Color.SKY_BLUE
	eye_color_picker.edit_alpha = false
	eye_color_picker.custom_minimum_size = Vector2(50,50)
	eye_color_picker.color_changed.connect(eye_color_changed)
	hair_vbox.add_child(eye_color_picker)
	label = Label.new()
	label.text = \"Hair Color\"
	hair_vbox.add_child(label)
	var hair_color_picker = ColorPickerButton.new()
	hair_color_picker.color = Color.WEB_MAROON
	hair_color_picker.edit_alpha = false
	hair_color_picker.custom_minimum_size = Vector2(50,50)
	hair_color_picker.color_changed.connect(hair_color_changed)
	hair_vbox.add_child(hair_color_picker)
	_make_cloths_menu()
	label = Label.new()
	label.text = \"Hair Style\"
	hair_vbox.add_child(label)
	var hair_options = OptionButton.new()
	hair_vbox.add_child(hair_options)
	var icon = load(\"res://assets/thumbnails/hair/none.png\")
	hair_options.add_icon_item(icon,\"none\")
	hair_menu_options.append(\"none\")
	hair_options.selected = 0
	for hair_name : String in registry.body_parts.Hair:
		icon = load(\"res://assets/thumbnails/hair/\" + hair_name.to_lower() + \".png\")
		hair_options.add_icon_item(icon,hair_name)
		hair_menu_options.append(hair_name)
	hair_options.item_selected.connect(hair_selected)
		
	label = Label.new()
	label.text = \"Eyebrows\"
	hair_vbox.add_child(label)
	var eyebrow_options = OptionButton.new()
	hair_vbox.add_child(eyebrow_options)
	for eyebrow_name : String in registry.body_parts.RightEyebrow:
		var id = eyebrow_name.get_slice(\"-\",1)
		icon = load(\"res://assets/thumbnails/eyebrow\"+id+\".png\")
		eyebrow_options.add_icon_item(icon,\"\")
		eyebrow_menu_options.append(eyebrow_name)
	eyebrow_options.selected = 11
	eyebrow_options.item_selected.connect(eyebrow_selected)
	
	label = Label.new()
	label.text = \"Eyelashes\"
	hair_vbox.add_child(label)
	var eyelash_options = OptionButton.new()
	hair_vbox.add_child(eyelash_options)
	for i in 4:
		if not i == 2: #skip the third, its the same as the second
			var id:String = str(0)+str(i+1)
			icon = load(\"res://assets/thumbnails/eyelashes\"+id+\".png\")
			eyelash_options.add_icon_item(icon,\"\")
	eyelash_options.item_selected.connect(eyelash_selected)
		
	var details_panel = ScrollContainer.new()
	details_panel.name = \"Details\"
	details_panel.size_flags_vertical=Control.SIZE_EXPAND_FILL
	$Split_Screen/Menu_Options.add_child(details_panel)
	var details_tab = TabContainer.new()
	details_tab.set_custom_minimum_size(Vector2(300,0))
	details_tab.size_flags_horizontal=Control.SIZE_FILL
	details_tab.size_flags_vertical=Control.SIZE_EXPAND_FILL
	details_panel.add_child(details_tab)
	for category_name in shapekey_categories:
		
		var category_tab = ScrollContainer.new()
		details_tab.add_child(category_tab)
		category_tab.name = category_name
		var details_vbox=VBoxContainer.new()
		details_vbox.name=category_name
		category_tab.add_child(details_vbox)
		category_keys2 = shapekey_categories[category_name]
		for key_name:String in category_keys2:
			var slider = load(\"res://shapekey_slider.tscn\").instantiate()
			slider.label_name = key_name
			slider.shapekeys = category_keys2[key_name]
			slider.change_shapekeys.connect(set_shapekeys)
			details_vbox.add_child(slider)
			
		var spacer=Label.new()
		spacer.name=\" \"
		spacer.size_flags_horizontal=Control.SIZE_EXPAND_FILL
		details_vbox.add_child(spacer)
	pose_simple_container()
	pose_detailed_container()
func pose_simple_container():
	var pose_panel = ScrollContainer.new()
	$Split_Screen/Menu_Options.add_child(pose_panel)
	pose_panel.name = \"Pose\"
	pass
func pose_detailed_container():
	var pose_panel = ScrollContainer.new()
	$Split_Screen/Menu_Options.add_child(pose_panel)
	pose_panel.name = \"Pose Details\"
	var pose_vbox = VBoxContainer.new()
	pose_vbox.size_flags_vertical=Control.SIZE_EXPAND_FILL
	pose_panel.add_child(pose_vbox)
	var pose_tab = TabContainer.new()
	pose_tab.set_custom_minimum_size(Vector2(300,0))
	pose_tab.size_flags_horizontal=Control.SIZE_FILL
	pose_tab.size_flags_vertical=Control.SIZE_EXPAND_FILL
	pose_vbox.add_child(pose_tab)
	var  categories = {}
	categories.root = [\"Root\",\"Hips\"]
	categories.head = [\"Neck\",\"Head\"]
	categories.torso = [\"Spine\",\"Chest\",\"UpperChest\"]
	categories.leftArm = [\"LeftShoulder\",\"LeftUpperArm\",\"LeftHand\"]
	categories.leftHand = [\"LeftIndexProximal\",\"LeftIndexIntermediate\",\"LeftIndexDistal\",
							\"LeftMiddleProximal\",\"LeftMiddleIntermediate\",\"LeftMiddleDistal\",
							\"LeftLittleProximal\",\"LeftLittleIntermediate\",\"LeftLittleDistal\",
							\"LeftRingProximal\",\"LeftRingIntermediate\",\"LeftRingDistal\",
							\"LeftThumbProximal\",\"LeftThumbMetacarpal\",\"LeftThumbDistal\"]
	categories.rightArm = [\"RightShoulder\",\"RightUpperArm\",\"RightHand\"]
	categories.rightHand = [\"RightIndexProximal\",\"RightIndexIntermediate\",\"RightIndexDistal\",
							\"RightMiddleProximal\",\"RightMiddleIntermediate\",\"RightMiddleDistal\",
							\"RightLittleProximal\",\"RightLittleIntermediate\",\"LittleDistal\",
							\"RightRingProximal\",\"RightRingIntermediate\",\"RightRingDistal\",
							\"RightThumbProximal\",\"RightThumbMetacarpal\",\"RightThumbDistal\"]
	categories.leftLeg = [\"LeftUpperLeg\",\"LeftLowerLeg\",\"LeftFoot\"]
	categories.rightLeg = [\"RightUpperLeg\",\"RightLowerLeg\",\"RightFoot\"]
	for categoryName in categories:
		var category_pannel = ScrollContainer.new()
		var label=Label.new()
		label.name=categoryName.capitalize()
		label.size_flags_horizontal=Control.SIZE_EXPAND_FILL
		category_pannel.add_child(label)
		pose_tab.add_child(category_pannel)
		category_pannel.name=categoryName
		var category_vbox = VBoxContainer.new()
		category_vbox.set_custom_minimum_size(Vector2(300,0))
		category_vbox.size_flags_horizontal=Control.SIZE_FILL
		category_pannel.add_child(category_vbox)
		for bone_name in categories[categoryName]:
			for axis in [\"x\",\"y\",\"z\"]:
				var slider = load(\"res://pose_slider.tscn\").instantiate()
				slider.label_name = bone_name + \" / \" + axis
				slider.pose = bone_name
				slider.axis = axis
				slider.change_pose.connect(set_pose)
				category_vbox.add_child(slider)
		var spacer=Label.new()
		spacer.name=\" \"
		spacer.size_flags_horizontal=Control.SIZE_EXPAND_FILL
		category_pannel.add_child(spacer)
func _make_cloths_menu():
	var cloths_panel = ScrollContainer.new()
	$Split_Screen/Menu_Options.add_child(cloths_panel)
	cloths_panel.name = \"Cloths/Gear\"
	var cloths_vbox = VBoxContainer.new()
	cloths_vbox.name=\"cloths\"
	cloths_vbox.size_flags_vertical=Control.SIZE_EXPAND_FILL
	cloths_panel.add_child(cloths_vbox)
	var slots = {}
	for asset in HumanizerRegistry.clothes.values():
		for slot in asset.slots:
			if slot in slots.keys():
				slots[slot].add_item(asset.resource_name,asset)
			else:
				slots[slot] = load(\"res://cloths_option.tscn\").instantiate()
				slots[slot].label_name = slot
				slots[slot].slot = slot
				slots[slot].name = slot
				slots[slot].item_name = asset.resource_name
				slots[slot].add_item(\"None\",\"None\")
				slots[slot].add_item(asset.resource_name,asset)
				slots[slot].emit_cloths_change.connect(set_cloths)
				cloths_vbox.add_child(slots[slot])
func set_cloths(data):
	if data[\"object_selected\"] is String:
		clothes_dict.erase(data[\"slot\"])
		humanizer.clear_clothes_in_slot(data[\"slot\"])
	else:
		clothes_dict[data[\"slot\"]]=data[\"name\"]
		humanizer.apply_clothes(data[\"object_selected\"])
	
func _reset_skelleton():
	humanizer.skeleton.reset_bone_poses()
	
func set_pose(_values:Dictionary):
	var skeleton = humanizer.skeleton
	var bone_id = skeleton.find_bone(_values.pose)
	var rotVect = Vector3()
	match _values[\"axis\"]:
		\"x\":
			rotVect.x=1
		\"y\":
			rotVect.y=1
		\"z\":
			rotVect.z=1
	var pose = skeleton.get_bone_pose(bone_id)
	pose=pose.rotated_local(rotVect,_values[\"value\"])
	humanizer.skeleton.set_bone_pose(bone_id,pose)
	pose = skeleton.get_bone_pose(bone_id)

func get_skin_color_ratios():
	var ratios = []
	ratios.resize(12)
	ratios.fill(1)
	var light_ratio = (100-skin_color_ratio)/100.0
	var dark_ratio = skin_color_ratio/100.0
	
	if gender == \"male\":
		ratios = multiply_arrays(ratios,[1,1,1,0,0,0,1,1,1,0,0,0])
	else:
		ratios = multiply_arrays(ratios,[0,0,0,1,1,1,0,0,0,1,1,1])
		
	var age_ranges = [0.0,50.0,100.0]
	if age < age_ranges[1]:
		var upper_age = age/age_ranges[1]
		var lower_age = 1 - upper_age
		ratios = multiply_arrays(ratios,[lower_age,upper_age,0,lower_age,upper_age,0,lower_age,upper_age,0,lower_age,upper_age,0])
	else:
		var upper_age = (age-age_ranges[1])/(age_ranges[2]-age_ranges[1])
		var lower_age = 1 - upper_age
		ratios = multiply_arrays(ratios,[0,lower_age,upper_age,0,lower_age,upper_age,0,lower_age,upper_age,0,lower_age,upper_age])
		
	ratios = multiply_arrays(ratios,[light_ratio,light_ratio,light_ratio,light_ratio,light_ratio,light_ratio,dark_ratio,dark_ratio,dark_ratio,dark_ratio,dark_ratio,dark_ratio])
	return ratios
	

func eye_color_changed(color:Color):
	humanizer.eye_color = color
func hair_color_changed(color:Color):
	humanizer.hair_color = color

func multiply_arrays(array1:Array,array2:Array):
	if not array1.size() == array2.size():
		printerr(\"cant multiply arrays of different lengths\")
		return null
	else:
		var output = []
		for i in array1.size():
			output.append(array1[i] * array2[i])
		return output


func set_shapekeys(shapekey_values:Dictionary):
	humanizer.set_shapekeys(shapekey_values)
	get_camera_min_max()
	_on_zoom_slider_value_changed($Split_Screen/Right_Side/verticalScrolls/Right_Side/zoom_slider.value)

func hair_selected(option_id:int):
	var hair_name = hair_menu_options[option_id]
	if option_id == 0:
		humanizer.clear_body_part(\"Hair\")
	else:
		humanizer.set_body_part(registry.body_parts.Hair[hair_name])

func eyebrow_selected(option_id:int):
	var eyebrow_name = eyebrow_menu_options[option_id]
	humanizer.set_body_part(registry.body_parts.RightEyebrow[eyebrow_name])
	eyebrow_name = eyebrow_name.replace(\"Right\",\"Left\")
	humanizer.set_body_part(registry.body_parts.LeftEyebrow[eyebrow_name])

func eyelash_selected(option_id:int):
	var left_eyelash_name = \"LeftEyelash\"
	var right_eyelash_name = \"RightEyelash\"
	var material_name = \"eyelashes04\" #false lashes
	if option_id < 2:
		material_name = \"eyelashes0\" + str(option_id+1) 
	else:
		left_eyelash_name = \"FalseLeftEyelash\"
		right_eyelash_name = \"FalseRightEyelash\"
			
	humanizer.set_body_part(registry.body_parts.LeftEyelash[left_eyelash_name])
	humanizer.set_body_part_material(\"LeftEyelash\",material_name)
	humanizer.set_body_part(registry.body_parts.RightEyelash[right_eyelash_name])
	humanizer.set_body_part_material(\"RightEyelash\",material_name)

#smooth zoom, so nice wow
func _on_zoom_slider_value_changed(value):
	var invr_value = 1-value
	camera.size = ((zoom_out_size-zoom_in_size) * invr_value) + zoom_in_size
	if invr_value < zoom_mid_ratio:
		camera.v_offset = ((zoom_mid_offset-zoom_in_offset) * (invr_value/zoom_mid_ratio)) + zoom_in_offset
	else:
		camera.v_offset = ((zoom_out_offset-zoom_mid_offset) * ((invr_value-zoom_mid_ratio)/(1-zoom_mid_ratio))) + zoom_mid_offset
	
	
func _on_next_pressed():
	$FileDialog.show()
	var file_path = $FileDialog.current_file
	if len(file_path)>2:
		_on_save_pressed()
		var save_material = StandardMaterial3D.new()
		save_material.albedo_color = skin_shader.get_shader_parameter(\"albedo\")
		var save_texture_image = Image.create(2**11,2**11,true,Image.FORMAT_RGB8)
		var ratios = get_skin_color_ratios()
		var textures = []
		for tex in skin_shader.get_shader_parameter(\"skin_textures\"):
			textures.append(tex.get_image())
		for x in save_texture_image.get_width():
			for y in save_texture_image.get_height():
				var color = Color.BLACK
				for r in ratios.size():
					if ratios[r] > 0.0:
						color += textures[r].get_pixel(x,y) * ratios[r]
				save_texture_image.set_pixel(x,y,color)
		save_texture_image.generate_mipmaps()
		save_material.albedo_texture = ImageTexture.create_from_image(save_texture_image)
		humanizer.get_node(\"Body\").set_surface_override_material(0,save_material)
		humanizer.set_component_state(true,&'main_collider')
		## bake to merge mesh textures and surfaces
		#known weirdness when saving to path that already exists, delete it early when over-writing
		delete_directory(humanizer.save_path)
		humanizer.standard_bake()
		#humanizer.human_config.rig=rigName
		
		var mesh = humanizer.find_child(\"Baked-Opaque\").mesh
		var surface_tool= SurfaceTool.new()
		surface_tool.append_from(mesh, 0,humanizer.transform)
		surface_tool.append_from(baseMesh.mesh, 0, baseMesh.transform)
		var combinedMesh:ArrayMesh=surface_tool.commit()
		OBJExporter.save_mesh_to_files(combinedMesh, file_path)
		_warning(\"Poses not currently supported. The default pose was exported.\")
		var parent= humanizer.get_parent()
		humanizer.queue_free()
		humanizer=AutoUpdatingHumanizer.new()
		parent.add_child(humanizer)
		load_character_file(nameBox.text)  
		humanizer.get_node(\"AnimationTree\").active=false      
func _warning(text):
	$Warning.dialog_text=text#
	$Warning.title=\"WARNING\"
	$Warning.initial_position=$Warning.WINDOW_INITIAL_POSITION_CENTER_MAIN_WINDOW_SCREEN
	$Warning.show()
func _on_save_pressed() -> void:
	var dir = DirAccess.open(\"user://\")
	if not(dir.dir_exists(\"user://saves\")):
		DirAccess.make_dir_absolute(\"user://saves\")
	var saveFile = FileAccess.open(\"user://saves/%s.save\" % nameBox.text,FileAccess.WRITE)
	saveFile.store_var(humanizer.human_config.shapekeys)
	var clothsFile = FileAccess.open(\"user://saves/%s.clo\" % nameBox.text,FileAccess.WRITE)
	print(clothes_dict)
	clothsFile.store_var(clothes_dict)
	
	$Warning.dialog_text=\"Saving operation for character %s is completed.\"%nameBox.text
	$Warning.title=\"Save Complete\"
	$Warning.initial_position=$Warning.WINDOW_INITIAL_POSITION_CENTER_MAIN_WINDOW_SCREEN
	$Warning.show()
	
func load_character_file(characterName):
	set_character_name(characterName)
	var path=\"user://saves/\"+characterName+\".save\"
	var file = FileAccess.open(path, FileAccess.READ)
	var clothesFile = FileAccess.open(\"user://saves/\"+characterName+\".clo\", FileAccess.READ)
	var shapekeys = file.get_var()
	clothes_dict = clothesFile.get_var()
	if not(clothes_dict):
		clothes_dict = {}
	setup_character(shapekeys)
	for slot in clothesSlots:
		humanizer.clear_clothes_in_slot(slot)
	for slider in $Split_Screen/Menu_Options/Cloths_Gear/cloths.get_children():
		var slot = slider.name
		print(slot)
		if slot in clothes_dict.keys():
			print(clothes_dict[slot])
			for i in range(slider.find_child(\"value\").get_item_count()):
				if slider.find_child(\"value\").get_item_text(i) == clothes_dict[slot]:
					slider.find_child(\"value\").select(i)
					slider.option_change(i)
		
func setup_character(shapekeys):
	var sliders=[]
	findByClass($Split_Screen/Menu_Options,\"Slider\",sliders)
	for slider in sliders:
		var parent = slider.get_parent()
		if \"shapekeys\" in parent:
			var key = parent.shapekeys[0]
			if key in shapekeys:
				parent.set_value(shapekeys[key]*100)
			else:
				parent.set_value(0)
	humanizer.set_shapekeys(shapekeys)
func findByClass(node: Node, className : String, result : Array) -> void:
	if node.is_class(className) :
		result.push_back(node)
	for child in node.get_children():
		findByClass(child, className, result)
func set_character_name(value):
	nameBox.text = value
func new_name():
	nameBox.text = make_name()
var rng = RandomNumberGenerator.new()
const values ={\"Vowel\": [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\"],
			\"DoubleVowel\": [\"au\", \"oa\", \"ou\", \"ie\", \"ae\", \"eu\"],
			\"Consonent\":[\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\" ],
			\"doubeCons\" :[\"mm\", \"nn\", \"st\", \"ch\", \"ll\", \"tt\", \"ss\"],
			\"compose\":[\"gu\", \"cc\", \"sc\", \"tr\", \"fr\", \"pr\", \"br\", \"cr\", \"ch\", \"gn\", \"ix\", \"an\", \"do\", \"ir\", \"as\"]}
			
const transitions={\"initial\":[\"Vowel\",\"Consonent\",\"compose\"],
					\"Vowel\":[\"Consonent\",\"doubeCons\",\"compose\"],
					\"DoubleVowel\":[\"Consonent\",\"doubeCons\",\"compose\"],
					\"Consonent\":[\"Vowel\",\"DoubleVowel\"],
					\"doubeCons\":[\"Vowel\",\"DoubleVowel\"],
					\"compose\":[\"Vowel\"]}
func make_name():
	var length = rng.randi_range(5, 12)
	var charname=\"\"
	var index=0
	var state = \"initial\"
	while index < length:
		var obj = _get_letter(state,length-index)
		state=obj[0]
		var lastLetter = obj[1]
		charname += lastLetter
		index += len(lastLetter)
	return charname.capitalize()
		
func _get_letter(state, max_length):
	var options = transitions[state]
	var new_state = options[rng.randi_range(0, len(options)-1)]
	while max_length<3 and new_state in [\"compose\",\"DoubleVowel\",\"Consonent\"]:
		new_state = options[rng.randi_range(0, len(options)-1)]
	var letter = values[new_state][rng.randi_range(0, len(values[new_state])-1)]
	return [new_state,letter]


func _on_rotation_value_changed(value: float) -> void:
	humanizer.rotation.y=TAU*value/100


func _on_position_slider_value_changed(value: float) -> void:
	camera.v_offset=(value*(zoom_mid_offset*2+0.2)-0.1)/100
"

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_f0duq"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_sm1kj"]
sky_material = SubResource("ProceduralSkyMaterial_f0duq")

[sub_resource type="Environment" id="Environment_yvgqs"]
background_mode = 2
sky = SubResource("Sky_sm1kj")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="Resource" id="Resource_iovq0"]
script = ExtResource("2_xmw2h")
rig = "game_engine-RETARGETED"
shapekeys = {
"african": 0.333,
"african-female-baby": 0,
"african-female-child": 0,
"african-female-old": 0.0555556,
"african-female-young": 0.111111,
"african-male-baby": 0,
"african-male-child": 0,
"african-male-old": 0.0555556,
"african-male-young": 0.111111,
"age": 0.5,
"asian": 0.333,
"asian-female-baby": 0,
"asian-female-child": 0,
"asian-female-old": 0.0555556,
"asian-female-young": 0.111111,
"asian-male-baby": 0,
"asian-male-child": 0,
"asian-male-old": 0.0555556,
"asian-male-young": 0.111111,
"caucasian": 0.333,
"caucasian-female-baby": 0,
"caucasian-female-child": 0,
"caucasian-female-old": 0.0555556,
"caucasian-female-young": 0.111111,
"caucasian-male-baby": 0,
"caucasian-male-child": 0,
"caucasian-male-old": 0.0555556,
"caucasian-male-young": 0.111111,
"cupsize": 0.5,
"female-baby-averagemuscle-averageweight-averagecup-averagefirmness": 0.5,
"female-baby-averagemuscle-averageweight-maxheight": 0,
"female-baby-averagemuscle-averageweight-minheight": 0,
"female-baby-averagemuscle-maxweight-maxheight": 0,
"female-baby-averagemuscle-maxweight-minheight": 0,
"female-baby-averagemuscle-minweight-maxheight": 0,
"female-baby-averagemuscle-minweight-minheight": 0,
"female-baby-maxmuscle-averageweight-maxheight": 0,
"female-baby-maxmuscle-averageweight-minheight": 0,
"female-baby-maxmuscle-maxweight-maxheight": 0,
"female-baby-maxmuscle-maxweight-minheight": 0,
"female-baby-maxmuscle-minweight-maxheight": 0,
"female-baby-maxmuscle-minweight-minheight": 0,
"female-baby-minmuscle-averageweight-maxheight": 0,
"female-baby-minmuscle-averageweight-minheight": 0,
"female-baby-minmuscle-maxweight-maxheight": 0,
"female-baby-minmuscle-maxweight-minheight": 0,
"female-baby-minmuscle-minweight-maxheight": 0,
"female-baby-minmuscle-minweight-minheight": 0,
"female-child-averagemuscle-averageweight-averagecup-maxfirmness": 0,
"female-child-averagemuscle-averageweight-averagecup-minfirmness": 0,
"female-child-averagemuscle-averageweight-idealproportions": 0,
"female-child-averagemuscle-averageweight-maxcup-averagefirmness": 0,
"female-child-averagemuscle-averageweight-maxcup-maxfirmness": 0,
"female-child-averagemuscle-averageweight-maxcup-minfirmness": 0,
"female-child-averagemuscle-averageweight-maxheight": 0,
"female-child-averagemuscle-averageweight-mincup-averagefirmness": 0,
"female-child-averagemuscle-averageweight-mincup-maxfirmness": 0,
"female-child-averagemuscle-averageweight-mincup-minfirmness": 0,
"female-child-averagemuscle-averageweight-minheight": 0,
"female-child-averagemuscle-averageweight-uncommonproportions": 0,
"female-child-averagemuscle-maxweight-averagecup-maxfirmness": 0,
"female-child-averagemuscle-maxweight-averagecup-minfirmness": 0,
"female-child-averagemuscle-maxweight-idealproportions": 0,
"female-child-averagemuscle-maxweight-maxcup-averagefirmness": 0,
"female-child-averagemuscle-maxweight-maxcup-maxfirmness": 0,
"female-child-averagemuscle-maxweight-maxcup-minfirmness": 0,
"female-child-averagemuscle-maxweight-maxheight": 0,
"female-child-averagemuscle-maxweight-mincup-averagefirmness": 0,
"female-child-averagemuscle-maxweight-mincup-maxfirmness": 0,
"female-child-averagemuscle-maxweight-mincup-minfirmness": 0,
"female-child-averagemuscle-maxweight-minheight": 0,
"female-child-averagemuscle-maxweight-uncommonproportions": 0,
"female-child-averagemuscle-minweight-averagecup-maxfirmness": 0,
"female-child-averagemuscle-minweight-averagecup-minfirmness": 0,
"female-child-averagemuscle-minweight-idealproportions": 0,
"female-child-averagemuscle-minweight-maxcup-averagefirmness": 0,
"female-child-averagemuscle-minweight-maxcup-maxfirmness": 0,
"female-child-averagemuscle-minweight-maxcup-minfirmness": 0,
"female-child-averagemuscle-minweight-maxheight": 0,
"female-child-averagemuscle-minweight-mincup-averagefirmness": 0,
"female-child-averagemuscle-minweight-mincup-maxfirmness": 0,
"female-child-averagemuscle-minweight-mincup-minfirmness": 0,
"female-child-averagemuscle-minweight-minheight": 0,
"female-child-averagemuscle-minweight-uncommonproportions": 0,
"female-child-maxmuscle-averageweight-averagecup-maxfirmness": 0,
"female-child-maxmuscle-averageweight-averagecup-minfirmness": 0,
"female-child-maxmuscle-averageweight-idealproportions": 0,
"female-child-maxmuscle-averageweight-maxcup-averagefirmness": 0,
"female-child-maxmuscle-averageweight-maxcup-maxfirmness": 0,
"female-child-maxmuscle-averageweight-maxcup-minfirmness": 0,
"female-child-maxmuscle-averageweight-maxheight": 0,
"female-child-maxmuscle-averageweight-mincup-averagefirmness": 0,
"female-child-maxmuscle-averageweight-mincup-maxfirmness": 0,
"female-child-maxmuscle-averageweight-mincup-minfirmness": 0,
"female-child-maxmuscle-averageweight-minheight": 0,
"female-child-maxmuscle-averageweight-uncommonproportions": 0,
"female-child-maxmuscle-maxweight-averagecup-maxfirmness": 0,
"female-child-maxmuscle-maxweight-averagecup-minfirmness": 0,
"female-child-maxmuscle-maxweight-idealproportions": 0,
"female-child-maxmuscle-maxweight-maxcup-averagefirmness": 0,
"female-child-maxmuscle-maxweight-maxcup-maxfirmness": 0,
"female-child-maxmuscle-maxweight-maxcup-minfirmness": 0,
"female-child-maxmuscle-maxweight-maxheight": 0,
"female-child-maxmuscle-maxweight-mincup-averagefirmness": 0,
"female-child-maxmuscle-maxweight-mincup-maxfirmness": 0,
"female-child-maxmuscle-maxweight-mincup-minfirmness": 0,
"female-child-maxmuscle-maxweight-minheight": 0,
"female-child-maxmuscle-maxweight-uncommonproportions": 0,
"female-child-maxmuscle-minweight-averagecup-maxfirmness": 0,
"female-child-maxmuscle-minweight-averagecup-minfirmness": 0,
"female-child-maxmuscle-minweight-idealproportions": 0,
"female-child-maxmuscle-minweight-maxcup-averagefirmness": 0,
"female-child-maxmuscle-minweight-maxcup-maxfirmness": 0,
"female-child-maxmuscle-minweight-maxcup-minfirmness": 0,
"female-child-maxmuscle-minweight-maxheight": 0,
"female-child-maxmuscle-minweight-mincup-averagefirmness": 0,
"female-child-maxmuscle-minweight-mincup-maxfirmness": 0,
"female-child-maxmuscle-minweight-mincup-minfirmness": 0,
"female-child-maxmuscle-minweight-minheight": 0,
"female-child-maxmuscle-minweight-uncommonproportions": 0,
"female-child-minmuscle-averageweight-averagecup-maxfirmness": 0,
"female-child-minmuscle-averageweight-averagecup-minfirmness": 0,
"female-child-minmuscle-averageweight-idealproportions": 0,
"female-child-minmuscle-averageweight-maxcup-averagefirmness": 0,
"female-child-minmuscle-averageweight-maxcup-maxfirmness": 0,
"female-child-minmuscle-averageweight-maxcup-minfirmness": 0,
"female-child-minmuscle-averageweight-maxheight": 0,
"female-child-minmuscle-averageweight-mincup-averagefirmness": 0,
"female-child-minmuscle-averageweight-mincup-maxfirmness": 0,
"female-child-minmuscle-averageweight-mincup-minfirmness": 0,
"female-child-minmuscle-averageweight-minheight": 0,
"female-child-minmuscle-averageweight-uncommonproportions": 0,
"female-child-minmuscle-maxweight-averagecup-maxfirmness": 0,
"female-child-minmuscle-maxweight-averagecup-minfirmness": 0,
"female-child-minmuscle-maxweight-idealproportions": 0,
"female-child-minmuscle-maxweight-maxcup-averagefirmness": 0,
"female-child-minmuscle-maxweight-maxcup-maxfirmness": 0,
"female-child-minmuscle-maxweight-maxcup-minfirmness": 0,
"female-child-minmuscle-maxweight-maxheight": 0,
"female-child-minmuscle-maxweight-mincup-averagefirmness": 0,
"female-child-minmuscle-maxweight-mincup-maxfirmness": 0,
"female-child-minmuscle-maxweight-mincup-minfirmness": 0,
"female-child-minmuscle-maxweight-minheight": 0,
"female-child-minmuscle-maxweight-uncommonproportions": 0,
"female-child-minmuscle-minweight-averagecup-maxfirmness": 0,
"female-child-minmuscle-minweight-averagecup-minfirmness": 0,
"female-child-minmuscle-minweight-idealproportions": 0,
"female-child-minmuscle-minweight-maxcup-averagefirmness": 0,
"female-child-minmuscle-minweight-maxcup-maxfirmness": 0,
"female-child-minmuscle-minweight-maxcup-minfirmness": 0,
"female-child-minmuscle-minweight-maxheight": 0,
"female-child-minmuscle-minweight-mincup-averagefirmness": 0,
"female-child-minmuscle-minweight-mincup-maxfirmness": 0,
"female-child-minmuscle-minweight-mincup-minfirmness": 0,
"female-child-minmuscle-minweight-minheight": 0,
"female-child-minmuscle-minweight-uncommonproportions": 0,
"female-old-averagemuscle-averageweight-averagecup-averagefirmness": 0.166667,
"female-old-averagemuscle-averageweight-averagecup-maxfirmness": 0,
"female-old-averagemuscle-averageweight-averagecup-minfirmness": 0,
"female-old-averagemuscle-averageweight-idealproportions": 0,
"female-old-averagemuscle-averageweight-maxcup-averagefirmness": 0,
"female-old-averagemuscle-averageweight-maxcup-maxfirmness": 0,
"female-old-averagemuscle-averageweight-maxcup-minfirmness": 0,
"female-old-averagemuscle-averageweight-maxheight": 0,
"female-old-averagemuscle-averageweight-mincup-averagefirmness": 0,
"female-old-averagemuscle-averageweight-mincup-maxfirmness": 0,
"female-old-averagemuscle-averageweight-mincup-minfirmness": 0,
"female-old-averagemuscle-averageweight-minheight": 0,
"female-old-averagemuscle-averageweight-uncommonproportions": 0,
"female-old-averagemuscle-maxweight-averagecup-maxfirmness": 0,
"female-old-averagemuscle-maxweight-averagecup-minfirmness": 0,
"female-old-averagemuscle-maxweight-idealproportions": 0,
"female-old-averagemuscle-maxweight-maxcup-averagefirmness": 0,
"female-old-averagemuscle-maxweight-maxcup-maxfirmness": 0,
"female-old-averagemuscle-maxweight-maxcup-minfirmness": 0,
"female-old-averagemuscle-maxweight-maxheight": 0,
"female-old-averagemuscle-maxweight-mincup-averagefirmness": 0,
"female-old-averagemuscle-maxweight-mincup-maxfirmness": 0,
"female-old-averagemuscle-maxweight-mincup-minfirmness": 0,
"female-old-averagemuscle-maxweight-minheight": 0,
"female-old-averagemuscle-maxweight-uncommonproportions": 0,
"female-old-averagemuscle-minweight-averagecup-maxfirmness": 0,
"female-old-averagemuscle-minweight-averagecup-minfirmness": 0,
"female-old-averagemuscle-minweight-idealproportions": 0,
"female-old-averagemuscle-minweight-maxcup-averagefirmness": 0,
"female-old-averagemuscle-minweight-maxcup-maxfirmness": 0,
"female-old-averagemuscle-minweight-maxcup-minfirmness": 0,
"female-old-averagemuscle-minweight-maxheight": 0,
"female-old-averagemuscle-minweight-mincup-averagefirmness": 0,
"female-old-averagemuscle-minweight-mincup-maxfirmness": 0,
"female-old-averagemuscle-minweight-mincup-minfirmness": 0,
"female-old-averagemuscle-minweight-minheight": 0,
"female-old-averagemuscle-minweight-uncommonproportions": 0,
"female-old-maxmuscle-averageweight-averagecup-maxfirmness": 0,
"female-old-maxmuscle-averageweight-averagecup-minfirmness": 0,
"female-old-maxmuscle-averageweight-idealproportions": 0,
"female-old-maxmuscle-averageweight-maxcup-averagefirmness": 0,
"female-old-maxmuscle-averageweight-maxcup-maxfirmness": 0,
"female-old-maxmuscle-averageweight-maxcup-minfirmness": 0,
"female-old-maxmuscle-averageweight-maxheight": 0,
"female-old-maxmuscle-averageweight-mincup-averagefirmness": 0,
"female-old-maxmuscle-averageweight-mincup-maxfirmness": 0,
"female-old-maxmuscle-averageweight-mincup-minfirmness": 0,
"female-old-maxmuscle-averageweight-minheight": 0,
"female-old-maxmuscle-averageweight-uncommonproportions": 0,
"female-old-maxmuscle-maxweight-averagecup-maxfirmness": 0,
"female-old-maxmuscle-maxweight-averagecup-minfirmness": 0,
"female-old-maxmuscle-maxweight-idealproportions": 0,
"female-old-maxmuscle-maxweight-maxcup-averagefirmness": 0,
"female-old-maxmuscle-maxweight-maxcup-maxfirmness": 0,
"female-old-maxmuscle-maxweight-maxcup-minfirmness": 0,
"female-old-maxmuscle-maxweight-maxheight": 0,
"female-old-maxmuscle-maxweight-mincup-averagefirmness": 0,
"female-old-maxmuscle-maxweight-mincup-maxfirmness": 0,
"female-old-maxmuscle-maxweight-mincup-minfirmness": 0,
"female-old-maxmuscle-maxweight-minheight": 0,
"female-old-maxmuscle-maxweight-uncommonproportions": 0,
"female-old-maxmuscle-minweight-averagecup-maxfirmness": 0,
"female-old-maxmuscle-minweight-averagecup-minfirmness": 0,
"female-old-maxmuscle-minweight-idealproportions": 0,
"female-old-maxmuscle-minweight-maxcup-averagefirmness": 0,
"female-old-maxmuscle-minweight-maxcup-maxfirmness": 0,
"female-old-maxmuscle-minweight-maxcup-minfirmness": 0,
"female-old-maxmuscle-minweight-maxheight": 0,
"female-old-maxmuscle-minweight-mincup-averagefirmness": 0,
"female-old-maxmuscle-minweight-mincup-maxfirmness": 0,
"female-old-maxmuscle-minweight-mincup-minfirmness": 0,
"female-old-maxmuscle-minweight-minheight": 0,
"female-old-maxmuscle-minweight-uncommonproportions": 0,
"female-old-minmuscle-averageweight-averagecup-maxfirmness": 0,
"female-old-minmuscle-averageweight-averagecup-minfirmness": 0,
"female-old-minmuscle-averageweight-idealproportions": 0,
"female-old-minmuscle-averageweight-maxcup-averagefirmness": 0,
"female-old-minmuscle-averageweight-maxcup-maxfirmness": 0,
"female-old-minmuscle-averageweight-maxcup-minfirmness": 0,
"female-old-minmuscle-averageweight-maxheight": 0,
"female-old-minmuscle-averageweight-mincup-averagefirmness": 0,
"female-old-minmuscle-averageweight-mincup-maxfirmness": 0,
"female-old-minmuscle-averageweight-mincup-minfirmness": 0,
"female-old-minmuscle-averageweight-minheight": 0,
"female-old-minmuscle-averageweight-uncommonproportions": 0,
"female-old-minmuscle-maxweight-averagecup-maxfirmness": 0,
"female-old-minmuscle-maxweight-averagecup-minfirmness": 0,
"female-old-minmuscle-maxweight-idealproportions": 0,
"female-old-minmuscle-maxweight-maxcup-averagefirmness": 0,
"female-old-minmuscle-maxweight-maxcup-maxfirmness": 0,
"female-old-minmuscle-maxweight-maxcup-minfirmness": 0,
"female-old-minmuscle-maxweight-maxheight": 0,
"female-old-minmuscle-maxweight-mincup-averagefirmness": 0,
"female-old-minmuscle-maxweight-mincup-maxfirmness": 0,
"female-old-minmuscle-maxweight-mincup-minfirmness": 0,
"female-old-minmuscle-maxweight-minheight": 0,
"female-old-minmuscle-maxweight-uncommonproportions": 0,
"female-old-minmuscle-minweight-averagecup-maxfirmness": 0,
"female-old-minmuscle-minweight-averagecup-minfirmness": 0,
"female-old-minmuscle-minweight-idealproportions": 0,
"female-old-minmuscle-minweight-maxcup-averagefirmness": 0,
"female-old-minmuscle-minweight-maxcup-maxfirmness": 0,
"female-old-minmuscle-minweight-maxcup-minfirmness": 0,
"female-old-minmuscle-minweight-maxheight": 0,
"female-old-minmuscle-minweight-mincup-averagefirmness": 0,
"female-old-minmuscle-minweight-mincup-maxfirmness": 0,
"female-old-minmuscle-minweight-mincup-minfirmness": 0,
"female-old-minmuscle-minweight-minheight": 0,
"female-old-minmuscle-minweight-uncommonproportions": 0,
"female-young-averagemuscle-averageweight-averagecup-averagefirmness": 0.333333,
"female-young-averagemuscle-averageweight-averagecup-maxfirmness": 0,
"female-young-averagemuscle-averageweight-averagecup-minfirmness": 0,
"female-young-averagemuscle-averageweight-idealproportions": 0,
"female-young-averagemuscle-averageweight-maxcup-averagefirmness": 0,
"female-young-averagemuscle-averageweight-maxcup-maxfirmness": 0,
"female-young-averagemuscle-averageweight-maxcup-minfirmness": 0,
"female-young-averagemuscle-averageweight-maxheight": 0,
"female-young-averagemuscle-averageweight-mincup-averagefirmness": 0,
"female-young-averagemuscle-averageweight-mincup-maxfirmness": 0,
"female-young-averagemuscle-averageweight-mincup-minfirmness": 0,
"female-young-averagemuscle-averageweight-minheight": 0,
"female-young-averagemuscle-averageweight-uncommonproportions": 0,
"female-young-averagemuscle-maxweight-averagecup-maxfirmness": 0,
"female-young-averagemuscle-maxweight-averagecup-minfirmness": 0,
"female-young-averagemuscle-maxweight-idealproportions": 0,
"female-young-averagemuscle-maxweight-maxcup-averagefirmness": 0,
"female-young-averagemuscle-maxweight-maxcup-maxfirmness": 0,
"female-young-averagemuscle-maxweight-maxcup-minfirmness": 0,
"female-young-averagemuscle-maxweight-maxheight": 0,
"female-young-averagemuscle-maxweight-mincup-averagefirmness": 0,
"female-young-averagemuscle-maxweight-mincup-maxfirmness": 0,
"female-young-averagemuscle-maxweight-mincup-minfirmness": 0,
"female-young-averagemuscle-maxweight-minheight": 0,
"female-young-averagemuscle-maxweight-uncommonproportions": 0,
"female-young-averagemuscle-minweight-averagecup-maxfirmness": 0,
"female-young-averagemuscle-minweight-averagecup-minfirmness": 0,
"female-young-averagemuscle-minweight-idealproportions": 0,
"female-young-averagemuscle-minweight-maxcup-averagefirmness": 0,
"female-young-averagemuscle-minweight-maxcup-maxfirmness": 0,
"female-young-averagemuscle-minweight-maxcup-minfirmness": 0,
"female-young-averagemuscle-minweight-maxheight": 0,
"female-young-averagemuscle-minweight-mincup-averagefirmness": 0,
"female-young-averagemuscle-minweight-mincup-maxfirmness": 0,
"female-young-averagemuscle-minweight-mincup-minfirmness": 0,
"female-young-averagemuscle-minweight-minheight": 0,
"female-young-averagemuscle-minweight-uncommonproportions": 0,
"female-young-maxmuscle-averageweight-averagecup-maxfirmness": 0,
"female-young-maxmuscle-averageweight-averagecup-minfirmness": 0,
"female-young-maxmuscle-averageweight-idealproportions": 0,
"female-young-maxmuscle-averageweight-maxcup-averagefirmness": 0,
"female-young-maxmuscle-averageweight-maxcup-maxfirmness": 0,
"female-young-maxmuscle-averageweight-maxcup-minfirmness": 0,
"female-young-maxmuscle-averageweight-maxheight": 0,
"female-young-maxmuscle-averageweight-mincup-averagefirmness": 0,
"female-young-maxmuscle-averageweight-mincup-maxfirmness": 0,
"female-young-maxmuscle-averageweight-mincup-minfirmness": 0,
"female-young-maxmuscle-averageweight-minheight": 0,
"female-young-maxmuscle-averageweight-uncommonproportions": 0,
"female-young-maxmuscle-maxweight-averagecup-maxfirmness": 0,
"female-young-maxmuscle-maxweight-averagecup-minfirmness": 0,
"female-young-maxmuscle-maxweight-idealproportions": 0,
"female-young-maxmuscle-maxweight-maxcup-averagefirmness": 0,
"female-young-maxmuscle-maxweight-maxcup-maxfirmness": 0,
"female-young-maxmuscle-maxweight-maxcup-minfirmness": 0,
"female-young-maxmuscle-maxweight-maxheight": 0,
"female-young-maxmuscle-maxweight-mincup-averagefirmness": 0,
"female-young-maxmuscle-maxweight-mincup-maxfirmness": 0,
"female-young-maxmuscle-maxweight-mincup-minfirmness": 0,
"female-young-maxmuscle-maxweight-minheight": 0,
"female-young-maxmuscle-maxweight-uncommonproportions": 0,
"female-young-maxmuscle-minweight-averagecup-maxfirmness": 0,
"female-young-maxmuscle-minweight-averagecup-minfirmness": 0,
"female-young-maxmuscle-minweight-idealproportions": 0,
"female-young-maxmuscle-minweight-maxcup-averagefirmness": 0,
"female-young-maxmuscle-minweight-maxcup-maxfirmness": 0,
"female-young-maxmuscle-minweight-maxcup-minfirmness": 0,
"female-young-maxmuscle-minweight-maxheight": 0,
"female-young-maxmuscle-minweight-mincup-averagefirmness": 0,
"female-young-maxmuscle-minweight-mincup-maxfirmness": 0,
"female-young-maxmuscle-minweight-mincup-minfirmness": 0,
"female-young-maxmuscle-minweight-minheight": 0,
"female-young-maxmuscle-minweight-uncommonproportions": 0,
"female-young-minmuscle-averageweight-averagecup-maxfirmness": 0,
"female-young-minmuscle-averageweight-averagecup-minfirmness": 0,
"female-young-minmuscle-averageweight-idealproportions": 0,
"female-young-minmuscle-averageweight-maxcup-averagefirmness": 0,
"female-young-minmuscle-averageweight-maxcup-maxfirmness": 0,
"female-young-minmuscle-averageweight-maxcup-minfirmness": 0,
"female-young-minmuscle-averageweight-maxheight": 0,
"female-young-minmuscle-averageweight-mincup-averagefirmness": 0,
"female-young-minmuscle-averageweight-mincup-maxfirmness": 0,
"female-young-minmuscle-averageweight-mincup-minfirmness": 0,
"female-young-minmuscle-averageweight-minheight": 0,
"female-young-minmuscle-averageweight-uncommonproportions": 0,
"female-young-minmuscle-maxweight-averagecup-maxfirmness": 0,
"female-young-minmuscle-maxweight-averagecup-minfirmness": 0,
"female-young-minmuscle-maxweight-idealproportions": 0,
"female-young-minmuscle-maxweight-maxcup-averagefirmness": 0,
"female-young-minmuscle-maxweight-maxcup-maxfirmness": 0,
"female-young-minmuscle-maxweight-maxcup-minfirmness": 0,
"female-young-minmuscle-maxweight-maxheight": 0,
"female-young-minmuscle-maxweight-mincup-averagefirmness": 0,
"female-young-minmuscle-maxweight-mincup-maxfirmness": 0,
"female-young-minmuscle-maxweight-mincup-minfirmness": 0,
"female-young-minmuscle-maxweight-minheight": 0,
"female-young-minmuscle-maxweight-uncommonproportions": 0,
"female-young-minmuscle-minweight-averagecup-maxfirmness": 0,
"female-young-minmuscle-minweight-averagecup-minfirmness": 0,
"female-young-minmuscle-minweight-idealproportions": 0,
"female-young-minmuscle-minweight-maxcup-averagefirmness": 0,
"female-young-minmuscle-minweight-maxcup-maxfirmness": 0,
"female-young-minmuscle-minweight-maxcup-minfirmness": 0,
"female-young-minmuscle-minweight-maxheight": 0,
"female-young-minmuscle-minweight-mincup-averagefirmness": 0,
"female-young-minmuscle-minweight-mincup-maxfirmness": 0,
"female-young-minmuscle-minweight-mincup-minfirmness": 0,
"female-young-minmuscle-minweight-minheight": 0,
"female-young-minmuscle-minweight-uncommonproportions": 0,
"firmness": 0.5,
"gender": 0.5,
"height": 0.5,
"jaldmic_perro_dog": 0.0,
"jaldmic_vaca_cow": 0.0,
"male-baby-averagemuscle-averageweight-averagecup-averagefirmness": 0.5,
"male-baby-averagemuscle-averageweight-maxheight": 0,
"male-baby-averagemuscle-averageweight-minheight": 0,
"male-baby-averagemuscle-maxweight-maxheight": 0,
"male-baby-averagemuscle-maxweight-minheight": 0,
"male-baby-averagemuscle-minweight-maxheight": 0,
"male-baby-averagemuscle-minweight-minheight": 0,
"male-baby-maxmuscle-averageweight-maxheight": 0,
"male-baby-maxmuscle-averageweight-minheight": 0,
"male-baby-maxmuscle-maxweight-maxheight": 0,
"male-baby-maxmuscle-maxweight-minheight": 0,
"male-baby-maxmuscle-minweight-maxheight": 0,
"male-baby-maxmuscle-minweight-minheight": 0,
"male-baby-minmuscle-averageweight-maxheight": 0,
"male-baby-minmuscle-averageweight-minheight": 0,
"male-baby-minmuscle-maxweight-maxheight": 0,
"male-baby-minmuscle-maxweight-minheight": 0,
"male-baby-minmuscle-minweight-maxheight": 0,
"male-baby-minmuscle-minweight-minheight": 0,
"male-child-averagemuscle-averageweight-idealproportions": 0,
"male-child-averagemuscle-averageweight-maxheight": 0,
"male-child-averagemuscle-averageweight-minheight": 0,
"male-child-averagemuscle-averageweight-uncommonproportions": 0,
"male-child-averagemuscle-maxweight-idealproportions": 0,
"male-child-averagemuscle-maxweight-maxheight": 0,
"male-child-averagemuscle-maxweight-minheight": 0,
"male-child-averagemuscle-maxweight-uncommonproportions": 0,
"male-child-averagemuscle-minweight-idealproportions": 0,
"male-child-averagemuscle-minweight-maxheight": 0,
"male-child-averagemuscle-minweight-minheight": 0,
"male-child-averagemuscle-minweight-uncommonproportions": 0,
"male-child-maxmuscle-averageweight-idealproportions": 0,
"male-child-maxmuscle-averageweight-maxheight": 0,
"male-child-maxmuscle-averageweight-minheight": 0,
"male-child-maxmuscle-averageweight-uncommonproportions": 0,
"male-child-maxmuscle-maxweight-idealproportions": 0,
"male-child-maxmuscle-maxweight-maxheight": 0,
"male-child-maxmuscle-maxweight-minheight": 0,
"male-child-maxmuscle-maxweight-uncommonproportions": 0,
"male-child-maxmuscle-minweight-idealproportions": 0,
"male-child-maxmuscle-minweight-maxheight": 0,
"male-child-maxmuscle-minweight-minheight": 0,
"male-child-maxmuscle-minweight-uncommonproportions": 0,
"male-child-minmuscle-averageweight-idealproportions": 0,
"male-child-minmuscle-averageweight-maxheight": 0,
"male-child-minmuscle-averageweight-minheight": 0,
"male-child-minmuscle-averageweight-uncommonproportions": 0,
"male-child-minmuscle-maxweight-idealproportions": 0,
"male-child-minmuscle-maxweight-maxheight": 0,
"male-child-minmuscle-maxweight-minheight": 0,
"male-child-minmuscle-maxweight-uncommonproportions": 0,
"male-child-minmuscle-minweight-idealproportions": 0,
"male-child-minmuscle-minweight-maxheight": 0,
"male-child-minmuscle-minweight-minheight": 0,
"male-child-minmuscle-minweight-uncommonproportions": 0,
"male-old-averagemuscle-averageweight-averagecup-averagefirmness": 0.166667,
"male-old-averagemuscle-averageweight-idealproportions": 0,
"male-old-averagemuscle-averageweight-maxheight": 0,
"male-old-averagemuscle-averageweight-minheight": 0,
"male-old-averagemuscle-averageweight-uncommonproportions": 0,
"male-old-averagemuscle-maxweight-idealproportions": 0,
"male-old-averagemuscle-maxweight-maxheight": 0,
"male-old-averagemuscle-maxweight-minheight": 0,
"male-old-averagemuscle-maxweight-uncommonproportions": 0,
"male-old-averagemuscle-minweight-idealproportions": 0,
"male-old-averagemuscle-minweight-maxheight": 0,
"male-old-averagemuscle-minweight-minheight": 0,
"male-old-averagemuscle-minweight-uncommonproportions": 0,
"male-old-maxmuscle-averageweight-idealproportions": 0,
"male-old-maxmuscle-averageweight-maxheight": 0,
"male-old-maxmuscle-averageweight-minheight": 0,
"male-old-maxmuscle-averageweight-uncommonproportions": 0,
"male-old-maxmuscle-maxweight-idealproportions": 0,
"male-old-maxmuscle-maxweight-maxheight": 0,
"male-old-maxmuscle-maxweight-minheight": 0,
"male-old-maxmuscle-maxweight-uncommonproportions": 0,
"male-old-maxmuscle-minweight-idealproportions": 0,
"male-old-maxmuscle-minweight-maxheight": 0,
"male-old-maxmuscle-minweight-minheight": 0,
"male-old-maxmuscle-minweight-uncommonproportions": 0,
"male-old-minmuscle-averageweight-idealproportions": 0,
"male-old-minmuscle-averageweight-maxheight": 0,
"male-old-minmuscle-averageweight-minheight": 0,
"male-old-minmuscle-averageweight-uncommonproportions": 0,
"male-old-minmuscle-maxweight-idealproportions": 0,
"male-old-minmuscle-maxweight-maxheight": 0,
"male-old-minmuscle-maxweight-minheight": 0,
"male-old-minmuscle-maxweight-uncommonproportions": 0,
"male-old-minmuscle-minweight-idealproportions": 0,
"male-old-minmuscle-minweight-maxheight": 0,
"male-old-minmuscle-minweight-minheight": 0,
"male-old-minmuscle-minweight-uncommonproportions": 0,
"male-young-averagemuscle-averageweight-averagecup-averagefirmness": 0.333333,
"male-young-averagemuscle-averageweight-idealproportions": 0,
"male-young-averagemuscle-averageweight-maxheight": 0,
"male-young-averagemuscle-averageweight-minheight": 0,
"male-young-averagemuscle-averageweight-uncommonproportions": 0,
"male-young-averagemuscle-maxweight-idealproportions": 0,
"male-young-averagemuscle-maxweight-maxheight": 0,
"male-young-averagemuscle-maxweight-minheight": 0,
"male-young-averagemuscle-maxweight-uncommonproportions": 0,
"male-young-averagemuscle-minweight-idealproportions": 0,
"male-young-averagemuscle-minweight-maxheight": 0,
"male-young-averagemuscle-minweight-minheight": 0,
"male-young-averagemuscle-minweight-uncommonproportions": 0,
"male-young-maxmuscle-averageweight-idealproportions": 0,
"male-young-maxmuscle-averageweight-maxheight": 0,
"male-young-maxmuscle-averageweight-minheight": 0,
"male-young-maxmuscle-averageweight-uncommonproportions": 0,
"male-young-maxmuscle-maxweight-idealproportions": 0,
"male-young-maxmuscle-maxweight-maxheight": 0,
"male-young-maxmuscle-maxweight-minheight": 0,
"male-young-maxmuscle-maxweight-uncommonproportions": 0,
"male-young-maxmuscle-minweight-idealproportions": 0,
"male-young-maxmuscle-minweight-maxheight": 0,
"male-young-maxmuscle-minweight-minheight": 0,
"male-young-maxmuscle-minweight-uncommonproportions": 0,
"male-young-minmuscle-averageweight-idealproportions": 0,
"male-young-minmuscle-averageweight-maxheight": 0,
"male-young-minmuscle-averageweight-minheight": 0,
"male-young-minmuscle-averageweight-uncommonproportions": 0,
"male-young-minmuscle-maxweight-idealproportions": 0,
"male-young-minmuscle-maxweight-maxheight": 0,
"male-young-minmuscle-maxweight-minheight": 0,
"male-young-minmuscle-maxweight-uncommonproportions": 0,
"male-young-minmuscle-minweight-idealproportions": 0,
"male-young-minmuscle-minweight-maxheight": 0,
"male-young-minmuscle-minweight-minheight": 0,
"male-young-minmuscle-minweight-uncommonproportions": 0,
"muscle": 0.5,
"proportions": 0.5,
"universal-female-baby-averagemuscle-averageweight": 0,
"universal-female-baby-averagemuscle-maxweight": 0,
"universal-female-baby-averagemuscle-minweight": 0,
"universal-female-baby-maxmuscle-averageweight": 0,
"universal-female-baby-maxmuscle-maxweight": 0,
"universal-female-baby-maxmuscle-minweight": 0,
"universal-female-baby-minmuscle-averageweight": 0,
"universal-female-baby-minmuscle-maxweight": 0,
"universal-female-baby-minmuscle-minweight": 0,
"universal-female-child-averagemuscle-averageweight": 0,
"universal-female-child-averagemuscle-maxweight": 0,
"universal-female-child-averagemuscle-minweight": 0,
"universal-female-child-maxmuscle-averageweight": 0,
"universal-female-child-maxmuscle-maxweight": 0,
"universal-female-child-maxmuscle-minweight": 0,
"universal-female-child-minmuscle-averageweight": 0,
"universal-female-child-minmuscle-maxweight": 0,
"universal-female-child-minmuscle-minweight": 0,
"universal-female-old-averagemuscle-averageweight": 0.166667,
"universal-female-old-averagemuscle-maxweight": 0,
"universal-female-old-averagemuscle-minweight": 0,
"universal-female-old-maxmuscle-averageweight": 0,
"universal-female-old-maxmuscle-maxweight": 0,
"universal-female-old-maxmuscle-minweight": 0,
"universal-female-old-minmuscle-averageweight": 0,
"universal-female-old-minmuscle-maxweight": 0,
"universal-female-old-minmuscle-minweight": 0,
"universal-female-young-averagemuscle-averageweight": 0.333333,
"universal-female-young-averagemuscle-maxweight": 0,
"universal-female-young-averagemuscle-minweight": 0,
"universal-female-young-maxmuscle-averageweight": 0,
"universal-female-young-maxmuscle-maxweight": 0,
"universal-female-young-maxmuscle-minweight": 0,
"universal-female-young-minmuscle-averageweight": 0,
"universal-female-young-minmuscle-maxweight": 0,
"universal-female-young-minmuscle-minweight": 0,
"universal-male-baby-averagemuscle-averageweight": 0,
"universal-male-baby-averagemuscle-maxweight": 0,
"universal-male-baby-averagemuscle-minweight": 0,
"universal-male-baby-maxmuscle-averageweight": 0,
"universal-male-baby-maxmuscle-maxweight": 0,
"universal-male-baby-maxmuscle-minweight": 0,
"universal-male-baby-minmuscle-averageweight": 0,
"universal-male-baby-minmuscle-maxweight": 0,
"universal-male-baby-minmuscle-minweight": 0,
"universal-male-child-averagemuscle-averageweight": 0,
"universal-male-child-averagemuscle-maxweight": 0,
"universal-male-child-averagemuscle-minweight": 0,
"universal-male-child-maxmuscle-averageweight": 0,
"universal-male-child-maxmuscle-maxweight": 0,
"universal-male-child-maxmuscle-minweight": 0,
"universal-male-child-minmuscle-averageweight": 0,
"universal-male-child-minmuscle-maxweight": 0,
"universal-male-child-minmuscle-minweight": 0,
"universal-male-old-averagemuscle-averageweight": 0.166667,
"universal-male-old-averagemuscle-maxweight": 0,
"universal-male-old-averagemuscle-minweight": 0,
"universal-male-old-maxmuscle-averageweight": 0,
"universal-male-old-maxmuscle-maxweight": 0,
"universal-male-old-maxmuscle-minweight": 0,
"universal-male-old-minmuscle-averageweight": 0,
"universal-male-old-minmuscle-maxweight": 0,
"universal-male-old-minmuscle-minweight": 0,
"universal-male-young-averagemuscle-averageweight": 0.333333,
"universal-male-young-averagemuscle-maxweight": 0,
"universal-male-young-averagemuscle-minweight": 0,
"universal-male-young-maxmuscle-averageweight": 0,
"universal-male-young-maxmuscle-maxweight": 0,
"universal-male-young-maxmuscle-minweight": 0,
"universal-male-young-minmuscle-averageweight": 0,
"universal-male-young-minmuscle-maxweight": 0,
"universal-male-young-minmuscle-minweight": 0,
"weight": 0.5
}
components = [&"main_collider", &"lod"]
body_parts = {}
body_part_materials = {}
clothes = []
clothes_materials = {}
transforms = {}
skin_color = Color(1, 1, 1, 1)
eye_color = Color(0.529412, 0.807843, 0.921569, 1)
eyebrow_color = Color(0.200784, 0, 0, 1)
hair_color = Color(0.501961, 0, 0, 1)
material_configs = {}

[node name="New_Character" type="MarginContainer" node_paths=PackedStringArray("humanizer", "nameBox", "baseMesh", "camera")]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 20
theme_override_constants/margin_top = 20
theme_override_constants/margin_right = 20
theme_override_constants/margin_bottom = 20
script = SubResource("GDScript_yutiq")
humanizer = NodePath("Split_Screen/Right_Side/CharacterView/Viewport/SubViewport/collection/AutoUpdatingHumanizer")
nameBox = NodePath("Split_Screen/Right_Side/CharacterView/HBoxContainer/Center/Name")
baseMesh = NodePath("Split_Screen/Right_Side/CharacterView/Viewport/SubViewport/collection/BaseMesh")
camera = NodePath("Split_Screen/Right_Side/CharacterView/Viewport/SubViewport/Camera3D")

[node name="Split_Screen" type="HSplitContainer" parent="."]
layout_mode = 2

[node name="Menu_Options" type="TabContainer" parent="Split_Screen"]
custom_minimum_size = Vector2(350, 0)
layout_mode = 2

[node name="Right_Side" type="PanelContainer" parent="Split_Screen"]
layout_mode = 2
size_flags_horizontal = 3

[node name="CharacterView" type="VBoxContainer" parent="Split_Screen/Right_Side"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Split_Screen/Right_Side/CharacterView"]
layout_mode = 2

[node name="Padding2" type="VBoxContainer" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Center" type="VBoxContainer" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="HBoxContainer" type="HBoxContainer" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center"]
layout_mode = 2

[node name="Padding" type="Label" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Label" type="Label" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center/HBoxContainer"]
layout_mode = 2
text = "Name"

[node name="Padding2" type="Label" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Random" type="Button" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center/HBoxContainer"]
layout_mode = 2
text = "Randomize"

[node name="Name" type="TextEdit" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center"]
custom_minimum_size = Vector2(0, 30)
layout_mode = 2
placeholder_text = "Name"

[node name="Padding" type="VBoxContainer" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Viewport" type="SubViewportContainer" parent="Split_Screen/Right_Side/CharacterView"]
custom_minimum_size = Vector2(50, 50)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
stretch = true

[node name="SubViewport" type="SubViewport" parent="Split_Screen/Right_Side/CharacterView/Viewport"]
transparent_bg = true
handle_input_locally = false
size = Vector2i(750, 485)
render_target_update_mode = 4

[node name="Camera3D" type="Camera3D" parent="Split_Screen/Right_Side/CharacterView/Viewport/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.16017, 1)
projection = 1
current = true
size = 2.0

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="Split_Screen/Right_Side/CharacterView/Viewport/SubViewport"]
transform = Transform3D(0.989127, -0.127363, 0.0735333, -9.83845e-09, 0.5, 0.866026, -0.147067, -0.856609, 0.494563, 0, 0, 0)
shadow_enabled = true

[node name="WorldEnvironment" type="WorldEnvironment" parent="Split_Screen/Right_Side/CharacterView/Viewport/SubViewport"]
environment = SubResource("Environment_yvgqs")

[node name="collection" type="Node3D" parent="Split_Screen/Right_Side/CharacterView/Viewport/SubViewport"]

[node name="BaseMesh" type="MeshInstance3D" parent="Split_Screen/Right_Side/CharacterView/Viewport/SubViewport/collection"]
transform = Transform3D(0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, -0.021825, 0)
mesh = ExtResource("4_8gh7d")
skeleton = NodePath("../..")

[node name="AutoUpdatingHumanizer" type="Node3D" parent="Split_Screen/Right_Side/CharacterView/Viewport/SubViewport/collection"]
script = ExtResource("1_7ijj3")
human_config = SubResource("Resource_iovq0")
_baked_root_node = "CharacterBody3D"
atlas_resolution = 2048
_animator_scene = ExtResource("4_xf4yp")
_render_layers = 1
_character_layers = 2
_staticbody_layers = 1
_character_mask = 3
_ragdoll_layers = 4
_ragdoll_mask = 5

[node name="HBoxContainer2" type="HBoxContainer" parent="Split_Screen/Right_Side/CharacterView"]
layout_mode = 2

[node name="rotation" type="HSlider" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3

[node name="padding" type="Label" parent="Split_Screen/Right_Side/CharacterView/HBoxContainer2"]
custom_minimum_size = Vector2(200, 0)
layout_mode = 2

[node name="Padding" type="Label" parent="Split_Screen/Right_Side/CharacterView"]
custom_minimum_size = Vector2(15, 0)
layout_mode = 2

[node name="verticalScrolls" type="HBoxContainer" parent="Split_Screen/Right_Side"]
layout_mode = 2
size_flags_horizontal = 8

[node name="VBoxContainer" type="VBoxContainer" parent="Split_Screen/Right_Side/verticalScrolls"]
layout_mode = 2

[node name="posLable" type="Label" parent="Split_Screen/Right_Side/verticalScrolls/VBoxContainer"]
layout_mode = 2
theme_override_font_sizes/font_size = 20
text = "Position"
horizontal_alignment = 1

[node name="PositionSlider" type="VSlider" parent="Split_Screen/Right_Side/verticalScrolls/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 3

[node name="padding" type="Label" parent="Split_Screen/Right_Side/verticalScrolls/VBoxContainer"]
layout_mode = 2

[node name="padding2" type="Label" parent="Split_Screen/Right_Side/verticalScrolls/VBoxContainer"]
layout_mode = 2

[node name="Right_Side" type="VBoxContainer" parent="Split_Screen/Right_Side/verticalScrolls"]
layout_mode = 2
size_flags_horizontal = 8
theme_override_constants/separation = 15
alignment = 1

[node name="zoom_label" type="Label" parent="Split_Screen/Right_Side/verticalScrolls/Right_Side"]
layout_mode = 2
theme_override_font_sizes/font_size = 20
text = "zoom"
horizontal_alignment = 1

[node name="zoom_slider" type="VSlider" parent="Split_Screen/Right_Side/verticalScrolls/Right_Side"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 3
max_value = 1.0
step = 0.01
allow_greater = true

[node name="Save" type="Button" parent="Split_Screen/Right_Side/verticalScrolls/Right_Side"]
layout_mode = 2
text = " Save "

[node name="Export" type="Button" parent="Split_Screen/Right_Side/verticalScrolls/Right_Side"]
layout_mode = 2
text = " Export "

[node name="Home" type="Button" parent="Split_Screen/Right_Side/verticalScrolls/Right_Side"]
layout_mode = 2
text = " Home "

[node name="padding" type="Label" parent="Split_Screen/Right_Side/verticalScrolls/Right_Side"]
layout_mode = 2

[node name="Warning" type="AcceptDialog" parent="."]
initial_position = 1
size = Vector2i(500, 100)
max_size = Vector2i(500, 500)
dialog_autowrap = true

[node name="FileDialog" type="FileDialog" parent="."]

[connection signal="pressed" from="Split_Screen/Right_Side/CharacterView/HBoxContainer/Center/HBoxContainer/Random" to="." method="new_name"]
[connection signal="value_changed" from="Split_Screen/Right_Side/CharacterView/HBoxContainer2/rotation" to="." method="_on_rotation_value_changed"]
[connection signal="value_changed" from="Split_Screen/Right_Side/verticalScrolls/VBoxContainer/PositionSlider" to="." method="_on_position_slider_value_changed"]
[connection signal="value_changed" from="Split_Screen/Right_Side/verticalScrolls/Right_Side/zoom_slider" to="." method="_on_zoom_slider_value_changed"]
[connection signal="pressed" from="Split_Screen/Right_Side/verticalScrolls/Right_Side/Save" to="." method="_on_save_pressed"]
[connection signal="pressed" from="Split_Screen/Right_Side/verticalScrolls/Right_Side/Export" to="." method="_on_next_pressed"]
